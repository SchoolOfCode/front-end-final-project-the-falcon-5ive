[{"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/index.js":"1","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/reportWebVitals.js":"2","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Context/authContext.js":"3","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Context/userContext.js":"4","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/App/App.js":"5","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Theme/theme.js":"6","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Index/index.js":"7","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Resources/resources.js":"8","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/CreateEvent/createEvent.js":"9","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Events/events.js":"10","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/EvenPage/EventPage.js":"11","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/tags/tags.js":"12","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CloudinaryImage/cloudinaryImage.js":"13","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Upload/upload.js":"14","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/MyEvents/myEvents.js":"15","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/userData.js":"16","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Hoc/authGuard.js":"17","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Contact/contact.js":"18","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Logo/logo.js":"19","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Loading/loading.js":"20","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Profile/profile.js":"21","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Homepage/homepage.js":"22","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/NavBar/nav.js":"23","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Alumni/Alumni.js":"24","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/SignInUser/signin.js":"25","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/ModalOverlay/modalOverlay.js":"26","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Maps/maps.js":"27","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/userLeftSide/userLeftSide.js":"28","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Card/card.js":"29","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/config.js":"30","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/SignInUser/background.js":"31","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Helpers/createUserObj.js":"32","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Intro/intro.js":"33","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Firebase/auth.js":"34","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CohortContainer/cohortContainer.js":"35","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Helpers/fetch.js":"36","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserProfile/userProfile.js":"37","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/jobUpdates/jobUpdates.js":"38","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/BootcamperProfile/Bootcamper.js":"39","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Signup/signup.js":"40","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Comments/comments.js":"41","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/userImage/userImage.js":"42","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserInfo/userinfo.js":"43","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/SocialMedia/logo.js":"44","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Photos/photos.js":"45","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserEventsContainer/userEventsContainer.js":"46","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserSkills/userskills.js":"47","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/EditProfile/editProfile.js":"48","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CreateJourney/addNewJourney.js":"49","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserJourney/journey.js":"50","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserIntro/userintro.js":"51","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Comment/comment.js":"52","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserSocial/social.js":"53","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/EditUserJourney/editUserJourney.js":"54","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Timeline/timeline.js":"55","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserSocial/socialLogo.js":"56","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Buttons/iconButton.js":"57","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CreateJourney/createJourney.js":"58","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Context/eventsContext.js":"59"},{"size":1022,"mtime":1611916306138,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":1608548374031,"results":"62","hashOfConfig":"61"},{"size":528,"mtime":1608647358306,"results":"63","hashOfConfig":"61"},{"size":758,"mtime":1609342355341,"results":"64","hashOfConfig":"61"},{"size":125,"mtime":1610214084295,"results":"65","hashOfConfig":"61"},{"size":304,"mtime":1610214084328,"results":"66","hashOfConfig":"61"},{"size":2760,"mtime":1611149882619,"results":"67","hashOfConfig":"61"},{"size":9472,"mtime":1610912134435,"results":"68","hashOfConfig":"61"},{"size":22738,"mtime":1610991620120,"results":"69","hashOfConfig":"61"},{"size":8878,"mtime":1611918036827,"results":"70","hashOfConfig":"61"},{"size":1988,"mtime":1610991620121,"results":"71","hashOfConfig":"61"},{"size":808,"mtime":1610991620119,"results":"72","hashOfConfig":"61"},{"size":730,"mtime":1610991620052,"results":"73","hashOfConfig":"61"},{"size":4223,"mtime":1610991620062,"results":"74","hashOfConfig":"61"},{"size":3263,"mtime":1610991620122,"results":"75","hashOfConfig":"61"},{"size":1171,"mtime":1609261019357,"results":"76","hashOfConfig":"61"},{"size":2366,"mtime":1611916005430,"results":"77","hashOfConfig":"61"},{"size":776,"mtime":1610912134424,"results":"78","hashOfConfig":"61"},{"size":1505,"mtime":1610461835967,"results":"79","hashOfConfig":"61"},{"size":387,"mtime":1610373668953,"results":"80","hashOfConfig":"61"},{"size":1018,"mtime":1610991620122,"results":"81","hashOfConfig":"61"},{"size":7511,"mtime":1611916765311,"results":"82","hashOfConfig":"61"},{"size":3929,"mtime":1610991704222,"results":"83","hashOfConfig":"61"},{"size":3096,"mtime":1610991620120,"results":"84","hashOfConfig":"61"},{"size":1828,"mtime":1610991620123,"results":"85","hashOfConfig":"61"},{"size":959,"mtime":1610373668956,"results":"86","hashOfConfig":"61"},{"size":1848,"mtime":1610991620059,"results":"87","hashOfConfig":"61"},{"size":6382,"mtime":1611065711520,"results":"88","hashOfConfig":"61"},{"size":12289,"mtime":1610991620119,"results":"89","hashOfConfig":"61"},{"size":54,"mtime":1610755429434,"results":"90","hashOfConfig":"61"},{"size":9293,"mtime":1610461836012,"results":"91","hashOfConfig":"61"},{"size":655,"mtime":1610098758003,"results":"92","hashOfConfig":"61"},{"size":13099,"mtime":1610912134419,"results":"93","hashOfConfig":"61"},{"size":1078,"mtime":1610469793566,"results":"94","hashOfConfig":"61"},{"size":1332,"mtime":1610913565966,"results":"95","hashOfConfig":"61"},{"size":252,"mtime":1610662658272,"results":"96","hashOfConfig":"61"},{"size":3093,"mtime":1610910223968,"results":"97","hashOfConfig":"61"},{"size":3394,"mtime":1610991620066,"results":"98","hashOfConfig":"61"},{"size":2443,"mtime":1610991620052,"results":"99","hashOfConfig":"61"},{"size":16725,"mtime":1611925353096,"results":"100","hashOfConfig":"61"},{"size":3089,"mtime":1610991620054,"results":"101","hashOfConfig":"61"},{"size":1721,"mtime":1610991620066,"results":"102","hashOfConfig":"61"},{"size":1630,"mtime":1610991620063,"results":"103","hashOfConfig":"61"},{"size":1088,"mtime":1609755046179,"results":"104","hashOfConfig":"61"},{"size":1850,"mtime":1610912134420,"results":"105","hashOfConfig":"61"},{"size":372,"mtime":1610530183453,"results":"106","hashOfConfig":"61"},{"size":691,"mtime":1610530183465,"results":"107","hashOfConfig":"61"},{"size":11366,"mtime":1610991620057,"results":"108","hashOfConfig":"61"},{"size":4685,"mtime":1610991620055,"results":"109","hashOfConfig":"61"},{"size":3590,"mtime":1610991620064,"results":"110","hashOfConfig":"61"},{"size":750,"mtime":1610991620064,"results":"111","hashOfConfig":"61"},{"size":3432,"mtime":1610991620053,"results":"112","hashOfConfig":"61"},{"size":506,"mtime":1610461836004,"results":"113","hashOfConfig":"61"},{"size":4035,"mtime":1610991620057,"results":"114","hashOfConfig":"61"},{"size":2494,"mtime":1610214084330,"results":"115","hashOfConfig":"61"},{"size":2302,"mtime":1610751010179,"results":"116","hashOfConfig":"61"},{"size":682,"mtime":1610214084323,"results":"117","hashOfConfig":"61"},{"size":7995,"mtime":1610991620056,"results":"118","hashOfConfig":"61"},{"size":1226,"mtime":1611916213096,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1lqa20p",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"122"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"122"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"122"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"122"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"122"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"122"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"122"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"122"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"122"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/index.js",[],["254","255"],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/reportWebVitals.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Context/authContext.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Context/userContext.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/App/App.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Theme/theme.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Index/index.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Resources/resources.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/CreateEvent/createEvent.js",["256","257"],"// React\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\n\n//Config\nimport { url } from \"../../config\";\n\n// Components\nimport Maps from \"../../Components/Maps/maps.js\";\nimport UploadImage from \"../../Components/Upload/upload.js\";\n\n//styling\nimport style from \"./createEvent.module.css\";\nimport \"./createEvent.css\";\nimport cn from \"classnames\";\n\n// userContext\nimport { useUserContext } from \"../../Context/userContext\";\n\n// Modal\nimport ModalOverlay from \"../../Components/ModalOverlay/modalOverlay.js\";\n\n// Mat ui\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nfunction CreateEvent({\n  eventsEdit,\n\n  eventId,\n\n  hide,\n  setHide,\n\n  description,\n  eventname,\n  time,\n  date,\n  editEvent,\n}) {\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      width: \"100%\",\n      height: \"1erm\",\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n  const classes = useStyles();\n\n  // Context\n  const [user] = useUserContext();\n\n  // React Form\n  const { register, handleSubmit, control } = useForm();\n\n  // State\n  const [complete, setComplete] = useState(false);\n  const [imageSelected, setImageSelected] = useState(null);\n  //const [onlineEvent, setOnlineEvent] = useState(false);\n\n  const [hideMap, setHideMap] = useState(\"\");\n  const [hideLink, setHideLink] = useState(\"hide\");\n\n  const [error, setError] = useState(false);\n\n  //For Maps and eventlink\n  const [marker, setMarker] = useState(null);\n  const [eventLinkForm, setEventLinkForm] = useState(\"\");\n\n  // All user emails\n  const [userEmails, setUserEmail] = useState(\"\");\n\n  // Get user emails\n  let getAllUserEmails = async () => {\n    let res = await fetch(`${url}/users`);\n    let data = await res.json();\n\n    return data.payload.map((user) => {\n      setUserEmail(user.email);\n    });\n  };\n\n  useEffect(() => {\n    getAllUserEmails();\n  }, []);\n\n  // Send email function\n  async function sendEmail(data, msg) {\n    if (msg.description === undefined) {\n      msg.description = \"\";\n    } else {\n      msg.description = msg.description + \".\";\n    }\n    await fetch(`${url}/mail`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        to: [\"za.qa@outlook.com\", \"qarout.zaid@gmail.com\"],\n        subject: `SoC: ${msg.eventName}`,\n        text: `${user.username} has created a new School of Code event. ${msg.description} You can view more details here: https://societly.netlify.app/event/${data.eventid}`,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(\"this is the user data: \", data))\n      .catch((error) => console.log(\"event creation error: \", error));\n  }\n\n  // PATCH/POST Event\n  let createEvent = async (msg) => {\n    if (imageSelected === null && !eventsEdit) {\n      alert(\n        \"Dear fellow SoC memeber, please upload an image before you submit\"\n      );\n      return;\n    }\n\n    await fetch(eventsEdit ? `${url}/events/${eventId}` : `${url}/events/`, {\n      method: eventsEdit ? \"PATCH\" : \"POST\",\n      body: JSON.stringify({\n        eventName: msg.eventName,\n        eventType: msg.eventTypes,\n        uid: user.uid,\n        date: msg.date,\n        time: msg.time,\n        description: msg.description,\n        image: imageSelected,\n        location: marker,\n        enableVolunteers: msg.eventVolunteers,\n        attendingList: eventsEdit ? null : [],\n        likes: eventsEdit ? null : [],\n        volunteerList: eventsEdit ? null : [],\n        eventLink: eventsEdit ? null : eventLinkForm,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => sendEmail(data, msg))\n      .catch((error) => {\n        setError(true);\n      });\n    setComplete(true);\n  };\n\n  function checkUncheck() {\n    hideMap === \"\" ? setHideMap(\"hide\") : setHideMap(\"\");\n    hideLink === \"hide\" ? setHideLink(\"\") : setHideLink(\"hide\");\n  }\n\n  if (!complete) {\n    return (\n      <div className=\"singupContainer marginTop\">\n        <div className=\"signupTitle\">\n          <div className=\"signupTitleAligner\">\n            <h3>Create Event</h3>\n          </div>\n        </div>\n        <div className=\"formContent\">\n          <div className={style.closeButtonContainer}>\n            {eventsEdit && (\n              <button\n                onClick={() =>\n                  hide === \"show\" ? setHide(\"hide\") : setHide(\"show\")\n                }\n                className={style.closeButton}\n              >\n                x\n              </button>\n            )}\n          </div>\n\n          {editEvent && (\n            <ModalOverlay\n              header={\"Edit Event\"}\n              visible={true}\n              onSave={handleSubmit(createEvent)}\n              onClose={() => setHide(\"hide\")}\n            >\n              <form>\n                <React.Fragment>\n                  <Grid container spacing={3}>\n                    {/*----------Event Name----------*/}\n                    <Grid item xs={12}>\n                      <FormControl variant=\"outlined\" fullWidth>\n                        <Controller\n                          name=\"eventName\"\n                          as={<TextField id=\"eventName\" label=\"Event Name\" />}\n                          control={control}\n                          defaultValue={eventname}\n                        />\n                      </FormControl>\n                    </Grid>\n\n                    {/*----------Date----------*/}\n                    <Grid item xs={12} sm={6}>\n                      <p className={style.formLabel}>Date:</p>\n                      <input\n                        name=\"date\"\n                        type=\"date\"\n                        ref={register}\n                        required\n                        className={cn(style.maxWidth, style.dateInput)}\n                        defaultValue={date}\n                      />\n                    </Grid>\n\n                    {/*----------Time----------*/}\n                    <Grid item xs={12} sm={6}>\n                      <p className={style.formLabel}>Time:</p>\n                      <input\n                        name=\"time\"\n                        type=\"time\"\n                        ref={register}\n                        required\n                        className={cn(style.maxWidth, style.dateInput)}\n                        defaultValue={time}\n                      />\n                    </Grid>\n\n                    {/*----------Description----------*/}\n\n                    {/* <Grid item xs={12} sm={6}>\n                  <div className={`${hideLink}`}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <Controller>\n                        <TextField\n                          name=\"description\"\n                          rows=\"10\"\n                          cols=\"30\"\n                          multiLine=\"\"\n                        />\n                      </Controller>\n                    </FormControl>\n                  </div>\n                </Grid> */}\n\n                    <Grid item xs={12} sm={6}>\n                      <FormControl variant=\"outlined\" fullWidth>\n                        <Controller\n                          name=\"description\"\n                          as={\n                            <TextField\n                              id=\"description\"\n                              variant=\"outlined\"\n                              label=\"Description\"\n                              style={{ margin: 8 }}\n                              multiline\n                              rows={8}\n                            />\n                          }\n                          control={control}\n                          defaultValue={description}\n                        />\n                      </FormControl>\n                    </Grid>\n\n                    {/*----------Upload Image----------*/}\n                    {/* <Grid item xs={12} sm={6}>\n                <p>Image:</p>\n                <input\n                  name=\"image\"\n                  ref={register}\n                  required\n                  className={style.maxWidth}\n                />\n              </Grid> */}\n\n                    <Grid item xs={12} sm={6}>\n                      <p className={style.formLabel}>Image:</p>\n                      <UploadImage setImageSelected={setImageSelected} />{\" \"}\n                    </Grid>\n\n                    {/*----------Location----------*/}\n                    <Grid item xs={12}>\n                      <div>\n                        <h3>Is this event online?</h3>\n                        <Switch\n                          focusVisibleClassName={classes.focusVisible}\n                          disableRipple\n                          onChange={checkUncheck}\n                          classes={{\n                            root: classes.root,\n                            switchBase: classes.switchBase,\n                            thumb: classes.thumb,\n                            track: classes.track,\n                            checked: classes.checked,\n                          }}\n                        />\n                      </div>\n                    </Grid>\n\n                    {/*----------Event Link----------*/}\n                    <Grid item xs={12}>\n                      <div className={`${hideLink}`}>\n                        <FormControl variant=\"outlined\" fullWidth>\n                          <TextField\n                            name=\"eventLink\"\n                            id=\"eventLink\"\n                            label=\"Event Link\"\n                            onChange={(e) => setEventLinkForm(e.target.value)}\n                          />\n                        </FormControl>\n                      </div>\n                    </Grid>\n\n                    {/*----------Event Location - Map----------*/}\n                    <Grid item xs={12}>\n                      <div className={`${hideMap}`}>\n                        <p className={style.formLabel}>Location:</p>\n                        <div>\n                          <Maps\n                            marker={marker}\n                            setMarker={setMarker}\n                            isEditing\n                          />\n                        </div>\n                      </div>\n                    </Grid>\n\n                    {/*----------Event Type----------*/}\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Event Type\n                      </InputLabel>\n                      <FormControl variant=\"outlined\" fullWidth>\n                        <Controller\n                          name=\"eventTypes\"\n                          as={\n                            <Select\n                              labelId=\"demo-simple-select-label\"\n                              id=\"demo-simple-select\"\n                              className={classes.formControl}\n                              name=\"eventTypes\"\n                              ref={register}\n                            >\n                              <MenuItem value=\"education\">Education</MenuItem>\n                              <MenuItem value=\"social\">Social</MenuItem>\n                              <MenuItem value=\"community\">Community</MenuItem>\n                            </Select>\n                          }\n                          control={control}\n                          rules={{ required: \"Required\" }}\n                        />\n                      </FormControl>\n                    </Grid>\n\n                    {/*----------Volunteers----------*/}\n                    <Grid item xs={12} sm={6}>\n                      <InputLabel id=\"demo-simple-select-label\">\n                        Open to volunteers?\n                      </InputLabel>\n                      <FormControl variant=\"outlined\" fullWidth>\n                        <Controller\n                          name=\"eventVolunteers\"\n                          as={\n                            <Select\n                              labelId=\"demo-simple-select-label\"\n                              id=\"demo-simple-select\"\n                              className={classes.formControl}\n                              name=\"eventVolunteers\"\n                              ref={register}\n                            >\n                              <MenuItem value=\"true\">Yes</MenuItem>\n                              <MenuItem value=\"false\">No</MenuItem>\n                            </Select>\n                          }\n                          control={control}\n                          rules={{ required: \"Required\" }}\n                        />\n                      </FormControl>\n                    </Grid>\n                  </Grid>\n                </React.Fragment>\n              </form>\n            </ModalOverlay>\n          )}\n\n          {!editEvent && (\n            <form onSubmit={handleSubmit(createEvent)}>\n              <React.Fragment>\n                <Grid container spacing={3}>\n                  {/*----------Event Name----------*/}\n                  <Grid item xs={12}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <Controller\n                        name=\"eventName\"\n                        as={\n                          <TextField\n                            id=\"eventName\"\n                            label=\"Event Name\"\n                            required\n                          />\n                        }\n                        control={control}\n                        rules={{ required: \"Required\" }}\n                        defaultValue={eventname}\n                      />\n                    </FormControl>\n                  </Grid>\n\n                  {/*----------Date----------*/}\n                  <Grid item xs={12} sm={6}>\n                    <p className={style.formLabel}>Date:</p>\n                    <input\n                      name=\"date\"\n                      type=\"date\"\n                      ref={register}\n                      required\n                      className={cn(style.maxWidth, style.dateInput)}\n                      defaultValue={date}\n                    />\n                  </Grid>\n\n                  {/*----------Time----------*/}\n                  <Grid item xs={12} sm={6}>\n                    <p className={style.formLabel}>Time:</p>\n                    <input\n                      name=\"time\"\n                      type=\"time\"\n                      ref={register}\n                      required\n                      className={cn(style.maxWidth, style.dateInput)}\n                      defaultValue={time}\n                    />\n                  </Grid>\n\n                  {/*----------Description----------*/}\n\n                  {/* <Grid item xs={12} sm={6}>\n                  <div className={`${hideLink}`}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <Controller>\n                        <TextField\n                          name=\"description\"\n                          rows=\"10\"\n                          cols=\"30\"\n                          multiLine=\"\"\n                        />\n                      </Controller>\n                    </FormControl>\n                  </div>\n                </Grid> */}\n\n                  <Grid item xs={12} sm={6}>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <Controller\n                        name=\"description\"\n                        as={\n                          <TextField\n                            id=\"description\"\n                            variant=\"outlined\"\n                            label=\"Description\"\n                            style={{ margin: 8 }}\n                            multiline\n                            rows={8}\n                          />\n                        }\n                        control={control}\n                        defaultValue={description}\n                      />\n                    </FormControl>\n                  </Grid>\n\n                  {/*----------Upload Image----------*/}\n                  {/* <Grid item xs={12} sm={6}>\n                <p>Image:</p>\n                <input\n                  name=\"image\"\n                  ref={register}\n                  required\n                  className={style.maxWidth}\n                />\n              </Grid> */}\n\n                  <Grid item xs={12} sm={6}>\n                    <p className={style.formLabel}>Image:</p>\n                    <UploadImage setImageSelected={setImageSelected} />{\" \"}\n                  </Grid>\n\n                  {/*----------Location----------*/}\n                  <Grid item xs={12}>\n                    <div>\n                      <h3>Is this event online?</h3>\n                      <Switch\n                        focusVisibleClassName={classes.focusVisible}\n                        disableRipple\n                        onChange={checkUncheck}\n                        classes={{\n                          root: classes.root,\n                          switchBase: classes.switchBase,\n                          thumb: classes.thumb,\n                          track: classes.track,\n                          checked: classes.checked,\n                        }}\n                      />\n                    </div>\n                  </Grid>\n\n                  {/*----------Event Link----------*/}\n                  <Grid item xs={12}>\n                    <div className={`${hideLink}`}>\n                      <FormControl variant=\"outlined\" fullWidth>\n                        <TextField\n                          name=\"eventLink\"\n                          id=\"eventLink\"\n                          label=\"Event Link\"\n                          onChange={(e) => setEventLinkForm(e.target.value)}\n                        />\n                      </FormControl>\n                    </div>\n                  </Grid>\n\n                  {/*----------Event Location - Map----------*/}\n                  <Grid item xs={12}>\n                    <div className={`${hideMap}`}>\n                      <p className={style.formLabel}>Location:</p>\n                      <div>\n                        <Maps marker={marker} setMarker={setMarker} isEditing />\n                      </div>\n                    </div>\n                  </Grid>\n\n                  {/*----------Event Type----------*/}\n                  <Grid item xs={12} sm={6}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Event Type\n                    </InputLabel>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <Controller\n                        name=\"eventTypes\"\n                        as={\n                          <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            className={classes.formControl}\n                            name=\"eventTypes\"\n                            ref={register}\n                          >\n                            <MenuItem value=\"education\">Education</MenuItem>\n                            <MenuItem value=\"social\">Social</MenuItem>\n                            <MenuItem value=\"community\">Community</MenuItem>\n                          </Select>\n                        }\n                        control={control}\n                        rules={{ required: \"Required\" }}\n                      />\n                    </FormControl>\n                  </Grid>\n\n                  {/*----------Volunteers----------*/}\n                  <Grid item xs={12} sm={6}>\n                    <InputLabel id=\"demo-simple-select-label\">\n                      Open to volunteers?\n                    </InputLabel>\n                    <FormControl variant=\"outlined\" fullWidth>\n                      <Controller\n                        name=\"eventVolunteers\"\n                        as={\n                          <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            className={classes.formControl}\n                            name=\"eventVolunteers\"\n                            ref={register}\n                          >\n                            <MenuItem value=\"true\">Yes</MenuItem>\n                            <MenuItem value=\"false\">No</MenuItem>\n                          </Select>\n                        }\n                        control={control}\n                        rules={{ required: \"Required\" }}\n                      />\n                    </FormControl>\n                  </Grid>\n\n                  <Grid item xs={12}>\n                    <input type=\"submit\" className=\"button maxWidth\" />\n                  </Grid>\n                </Grid>\n              </React.Fragment>\n            </form>\n          )}\n        </div>\n      </div>\n    );\n  } else if (error) {\n    return (\n      <div className=\"container marginTop center\">\n        <div className=\"signupTitle red\">\n          <div className=\"signupTitleAligner red\">\n            <h3>Event Creation Error</h3>\n          </div>\n        </div>\n\n        <div>\n          <Link to=\"/\">\n            <button className=\"button marginRight\">Return to Home</button>\n          </Link>\n          <Link to=\"/myevents\">\n            <button className=\"button marginLeft\">My Events</button>\n          </Link>\n        </div>\n      </div>\n    );\n  } else if (complete) {\n    return (\n      <div className=\"container marginTop center\">\n        <div className=\"signupTitle\">\n          <div className=\"signupTitleAligner\">\n            <h3>Event Create Successfully</h3>\n          </div>\n        </div>\n\n        <div class=\"success-checkmark\">\n          <div class=\"check-icon\">\n            <span class=\"icon-line line-tip\"></span>\n            <span class=\"icon-line line-long\"></span>\n            <div class=\"icon-circle\"></div>\n            <div class=\"icon-fix\"></div>\n          </div>\n        </div>\n\n        <div>\n          <Link to=\"/\">\n            <button className=\"button marginRight\">Return to Home</button>\n          </Link>\n          <Link to=\"/myevents\">\n            <button className=\"button marginLeft\">My Events</button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateEvent;\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Events/events.js",["258","259","260","261","262"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//Config\nimport { url } from \"../../config\";\n\n// Components\nimport UserLeftSide from \"../../Components/userLeftSide/userLeftSide.js\";\n\n// Material Ui\nimport Card from \"../../MaterialUi/Card/card.js\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\n// Styling\nimport style from \"./events.module.css\";\n\n// User Context\nimport { useUserContext } from \"../../Context/userContext\";\nimport { useEventsContext } from \"../../Context/eventsContext\";\n\nfunction GetAllEvents() {\n  // Importing user data\n  const [user] = useUserContext();\n\n  const [allEvents, setAllEvents] = useEventsContext();\n  const [attendingList, setAttendingList] = useState([]);\n  const [filterValue, setFilterValue] = useState(\"\");\n\n  const { id } = useParams();\n\n  console.log(`this is all events ${allEvents}`);\n\n  function getEventType(event) {\n    let eventTypeArr = event.map((event) => event.eventtype);\n\n    return eventTypeArr.reduce((acc, curr) => {\n      if (acc.find((value) => value === curr)) {\n        return acc;\n      }\n      return [...acc, curr];\n    }, []);\n  }\n\n  /*---------------Add to Attend Patch----------------*/\n  let addToAttend = (id, arr) => {\n    fetch(`${url}/events/${id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ attendingList: arr }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.log(error));\n  };\n\n  async function get() {\n    let res = await fetch(`${url}/events`);\n    let data = await res.json();\n    console.log(\"get\");\n    setAllEvents(data.payload);\n    if (id) {\n      filter(id);\n      setFilterValue(id);\n    }\n  }\n\n  useEffect(() => {\n    allEvents && get();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allEvents]);\n\n  useEffect(() => {\n    setInterval(() => {\n      get();\n    }, 10000000);\n  }, []);\n\n  // Filter\n  const [hideEducation, setHideEducation] = useState(\"\");\n  const [hideSocial, setHideSocial] = useState(\"\");\n  const [hideCommunity, setHideCommunity] = useState(\"\");\n\n  function filter(val) {\n    if (val === \"social\") {\n      setHideEducation(\"hide\");\n      setHideCommunity(\"hide\");\n      setHideSocial(\"\");\n    } else if (val === \"community\") {\n      setHideEducation(\"hide\");\n      setHideSocial(\"hide\");\n      setHideCommunity(\"\");\n    } else if (val === \"education\") {\n      setHideCommunity(\"hide\");\n      setHideSocial(\"hide\");\n      setHideEducation(\"\");\n    } else if (val === \"all\") {\n      setHideCommunity(\"\");\n      setHideSocial(\"\");\n      setHideEducation(\"\");\n    }\n  }\n\n  // if (id && allEvents) {\n  //   filter(id);\n  //   setFilterValue(id);\n  // }\n\n  return (\n    <div>\n      {user && (\n        <div className={style.row}>\n          <UserLeftSide />\n          <div className=\"container marginTop\">\n            <div className=\"column1\">\n              <section className=\"columnTwo\">\n                <div className=\"welcome\">\n                  <h3\n                    style={{\n                      fontSize: \"1.9rem\",\n                      marginTop: \"0\",\n                      marginBottom: \"0\",\n                    }}\n                  >\n                    Hello {user?.username} 👋\n                  </h3>\n                  <h4 style={{ marginTop: \"0\" }}>\n                    Here are the current planned events\n                  </h4>\n                </div>\n                <div className={style.buttons}>\n                  <Link to=\"/createevent\">\n                    <button className=\"button\">Create Event</button>\n                  </Link>\n                  <Link to=\"/myevents\">\n                    <button className=\"button\">My Events</button>\n                  </Link>\n                </div>\n\n                {/* <div>\n                  <p for=\"filter\">Filter by event type:</p>\n                  <select\n                    name=\"filter\"\n                    onChange={(e) => {\n                      filter(e.target.value);\n                    }}\n                  >\n                    <option selected value={\"all\"}>\n                      All\n                    </option>\n                    {getEventType(allEvents).map((event) => {\n                      return <option value={event}>{event}</option>;\n                    })}\n                  </select>\n                </div> */}\n                <div className=\"marginBottom\">\n                  <InputLabel\n                    shrink\n                    id=\"demo-simple-select-placeholder-label-label\"\n                  >\n                    Filter by Event Type\n                  </InputLabel>\n                  <Select\n                    labelId=\"demo-simple-select-placeholder-label-label\"\n                    id=\"demo-simple-select-placeholder-label\"\n                    value={filterValue ? filterValue : \"all\"}\n                    onChange={(e) => {\n                      filter(e.target.value);\n                      setFilterValue(e.target.value);\n                    }}\n                  >\n                    <MenuItem value={\"all\"}>All</MenuItem>\n                    {getEventType(allEvents).map((event) => {\n                      const eventTitle = `${event\n                        .charAt(0)\n                        .toUpperCase()}${event.slice(1)}`;\n                      return <MenuItem value={event}>{eventTitle}</MenuItem>;\n                    })}\n                  </Select>\n                </div>\n\n                <section className={`contentContainer ${hideEducation}`}>\n                  <h3>Education</h3>\n                  <div>\n                    <Grid container spacing={3}>\n                      {allEvents.map((item) => {\n                        if (item.eventtype === \"education\") {\n                          let date = new Date(item.date).toDateString();\n                          return (\n                            <Grid item xs={4}>\n                              <Paper>\n                                <Card\n                                  key={uuidv4()}\n                                  date={date}\n                                  setAttending={setAttendingList}\n                                  addToAttend={addToAttend}\n                                  item={item}\n                                />\n                              </Paper>\n                            </Grid>\n                          );\n                        }\n                      })}\n                    </Grid>\n                  </div>\n                </section>\n\n                <section className={`contentContainer ${hideSocial}`}>\n                  <h3>Social</h3>\n\n                  <Grid container spacing={3}>\n                    {allEvents.map((item) => {\n                      if (item.eventtype === \"social\") {\n                        let date = new Date(item.date).toDateString();\n                        return (\n                          <Grid item xs={4}>\n                            <Paper>\n                              <Card\n                                key={uuidv4()}\n                                date={date}\n                                setAttending={setAttendingList}\n                                addToAttend={addToAttend}\n                                item={item}\n                              />\n                            </Paper>\n                          </Grid>\n                        );\n                      }\n                    })}\n                  </Grid>\n                </section>\n\n                <section className={`contentContainer ${hideCommunity}`}>\n                  <h3>Community</h3>\n                  <Grid container spacing={3}>\n                    {allEvents.map((item, index) => {\n                      if (item.eventtype === \"community\") {\n                        let date = new Date(item.date).toDateString();\n                        return (\n                          <Grid item xs={4}>\n                            <Paper>\n                              <Card\n                                key={uuidv4()}\n                                date={date}\n                                setAttending={setAttendingList}\n                                addToAttend={addToAttend}\n                                item={item}\n                              />\n                            </Paper>\n                          </Grid>\n                        );\n                      }\n                    })}\n                  </Grid>\n                </section>\n              </section>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GetAllEvents;\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/EvenPage/EventPage.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/tags/tags.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CloudinaryImage/cloudinaryImage.js",["263"],"import React, { useState, useEffect } from \"react\";\nimport { Image } from \"cloudinary-react\";\n\nexport default function CloudinaryImage() {\n  const [images, setImages] = useState(\"\");\n\n  async function getImages() {\n    let res = await fetch(\"http://localhost:3000/users/imageupload\");\n    let data = await res.json();\n    setImages(data);\n  }\n\n  useEffect(() => {\n    getImages();\n  }, []);\n\n  return (\n    <div>\n      <h1>Hello</h1>\n      <div>\n        {images &&\n          images.map((image, index) => {\n            <Image\n              key={index}\n              cloudName=\"falcons\"\n              publicId={image}\n              width=\"300\"\n              crop=\"scale\"\n            />;\n          })}\n      </div>\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Upload/upload.js",["264"],"import React, { useState } from \"react\";\n\n//styling\nimport style from \"./upload.module.css\";\nimport cn from \"classnames\";\n\n// Font-awesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloudUploadAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nexport default function UploadImage({ setImageSelected }) {\n  // const [fileInputState, setFileInputState] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [previewSource, setPreviewSource] = useState(\"\");\n\n  const [uploaded, setUploaded] = useState(false);\n\n  function fileInput(e) {\n    const file = e.target.files[0];\n    const FileSize = e.target.files[0].size;\n\n    if (FileSize > 9777777) {\n      alert(\n        \"File is too large, please upload an image that's less than 10 MiB\"\n      );\n      return;\n    }\n\n    previewFile(file);\n  }\n\n  const previewFile = (file) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = () => {\n      setPreviewSource(reader.result);\n    };\n  };\n\n  const submitImage = (e) => {\n    e.preventDefault();\n    if (!previewSource) {\n      return alert(\"please select an image to upload\");\n    }\n    setImageSelected(previewSource);\n    setUploaded(true);\n    // uploadImage(previewSource);\n  };\n\n  // const uploadImage = async (base64EncodedImage) => {\n  //   console.log(base64EncodedImage);\n\n  //   await fetch(`http://localhost:3000/users/imageupload`, {\n  //     method: \"POST\",\n  //     body: JSON.stringify({\n  //       image: base64EncodedImage,\n  //     }),\n  //     headers: { \"content-type\": \"application/json\" },\n  //   })\n  //     .then((res) => res.json())\n  //     .then((data) => console.log(\"this is the image upload data: \", data))\n  //     .catch((error) => console.log(\"image upload error: \", error));\n  // };\n\n  return (\n    <div>\n      <label for=\"fileUpload\">\n        <div\n          style={{ width: \"auto\" }}\n          className={cn(style.uploadButton, \"button-blue\", \"marginBottom\")}\n        >\n          <FontAwesomeIcon icon={faCloudUploadAlt} /> Choose Event Image\n        </div>\n      </label>\n      <input\n        type=\"file\"\n        onChange={fileInput}\n        value={selectedFile}\n        className={cn(style.inputButton)}\n        id=\"fileUpload\"\n      />\n      {previewSource && (\n        <img\n          src={previewSource}\n          alt=\"user uploaded document\"\n          className={style.img}\n        />\n      )}\n\n      {!uploaded && (\n        <button onClick={submitImage} className=\"button maxWidth\">\n          Upload Image\n        </button>\n      )}\n\n      {uploaded && (\n        <button\n          onClick={submitImage}\n          className={cn(style.buttonComplete, \"maxWidth\")}\n        >\n          <i class=\"fas fa-check\"></i> Upload Successful\n        </button>\n      )}\n    </div>\n  );\n}\n\n// import React, { useState } from \"react\";\n// const axios = require(\"axios\");\n\n// function ReactUploadImage() {\n//   const [image, setImage] = useState({ file: null });\n\n//   function onFormSubmit(e) {\n//     e.preventDefault();\n//     const formData = new FormData();\n//     formData.append(\"myImage\", image.file);\n\n//     console.log(formData);\n//     console.log(image);\n\n//     const config = {\n//       headers: {\n//         \"content-type\": \"multipart/form-data\",\n//       },\n//     };\n//     axios\n//       .post(\n//         \"https://falcon5ives.herokuapp.com/users/upload\",\n//         formData,\n//         config,\n//         console.log(config)\n//       )\n//       .then((response) => {\n//         alert(\"The file is successfully uploaded\", console.log(response));\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n//   }\n\n//   function onChange(e) {\n//     console.log(\"e.target.value\", e.target.value);\n//     setImage(e.target.files[0].name);\n//     console.log(\n//       \"e.target.files[0]): \",\n//       setImage({ file: e.target.files[0].name })\n//     );\n//     console.log(\"image: \", image);\n//   }\n\n//   return (\n//     <form onSubmit={onFormSubmit}>\n//       <h1>File Upload</h1>\n//       <input type=\"file\" name=\"myImage\" onChange={onChange} />\n//       <button type=\"submit\">Upload</button>\n//     </form>\n//   );\n// }\n\n// export default ReactUploadImage;\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/MyEvents/myEvents.js",["265"],"import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//Config\nimport { url } from \"../../config\";\n\n// User Context\nimport { useUserContext } from \"../../Context/userContext\";\n\n// Components\nimport Card from \"../../MaterialUi/Card/card.js\";\nimport UserLeftSide from \"../../Components/userLeftSide/userLeftSide.js\";\n\n//styling\nimport style from \"./myEvents.module.css\";\n\nexport default function MyEvents({ profile = false }) {\n  // Importing user data\n  const [user] = useUserContext();\n\n  // fetchUserEvents function result\n  const [userEvents, setUserEvents] = useState(null);\n\n  async function fetchUserEvents() {\n    if (user) {\n      let res = await fetch(`${url}/userevents/${user?.uid}`);\n      let userEvents = await res.json();\n      setUserEvents(userEvents.payload);\n    }\n  }\n\n  useEffect(() => {\n    if (userEvents === null) {\n      fetchUserEvents();\n    }\n  }, [user, userEvents]);\n\n  const styling = {\n    eventDiv: \"myEventDiv\",\n    eventNameClass: \"myEventName\",\n    dateClass: \"myDateClass\",\n    timeClass: \"myTimeClass\",\n    imgClass: \"myImgClass\",\n    likesClass: \"myLikesClass\",\n    mapsClass: \"myMapsClass\",\n    descClass: \"myDescClass\",\n    attLengthClass: \"myAttLengthClass\",\n    attendButClass: \"myAttendButClass\",\n    attListClass: \"myAttListClass\",\n    editButClass: \"myEditButClass\",\n    delButClass: \"myDelButClass\",\n  };\n\n  // function logging() {\n  //   fetchUserEvents();\n  // }\n\n  return (\n    <div>\n      {user && (\n        <div className={style.row}>\n          {!profile && <UserLeftSide />}\n          {/*--------- Column 1---------*/}\n          <div className={style.column1}>\n            <section className={style.columnTwo}>\n              <div className={style.welcome}>\n                <h3>Hello {user?.username}</h3>\n                <h4>Take a look at your events or create one</h4>\n              </div>\n              <div>\n                <div className={style.eventButton}>\n                  <Link to=\"/createevent\">\n                    <button className=\"button\">Create Event</button>\n                  </Link>\n                </div>\n                <div className={style.eventButton}>\n                  {profile && (\n                    <Link to=\"/myevents\">\n                      <button className=\"button\">My Events</button>\n                    </Link>\n                  )}\n                </div>\n              </div>\n              {userEvents === [] && <h3>User events</h3>}\n              {userEvents &&\n                userEvents.map((item, index) => {\n                  let date = new Date(item.date).toDateString();\n                  return (\n                    <div className={style.card}>\n                      <Card\n                        key={uuidv4()}\n                        date={date}\n                        item={item}\n                        myEvents\n                        styling={styling}\n                        userId={user?.uid}\n                        fetchUserEvents={fetchUserEvents}\n                        setUserEvents={setUserEvents}\n                      />\n                    </div>\n                  );\n                })}\n            </section>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/userData.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Hoc/authGuard.js",["266","267"],"//React\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n//Context\nimport { useAuthContext } from \"../Context/authContext\";\nimport { useUserContext } from \"../Context/userContext\";\n\n//Component\nimport Loading from \"../Components/Loading/loading\";\nimport Signup from \"../Components/Signup/signup\";\n\n// Helpers\nimport fetchData from \"../Helpers/fetch\";\nimport createUserObj from \"../Helpers/createUserObj\";\n\nexport default function UserSignIn({\n  component: Component,\n  path = \"/\",\n  props,\n  exact = false,\n}) {\n  const [authUser, loading] = useAuthContext();\n  // user info returned from firebase - context\n\n  const [userData, setUserData] = useState();\n  // user data returned from backend\n\n  const [userJourney, setJourney] = useState();\n  // user journey data returned from backend\n\n  const [user, setUser] = useUserContext();\n  // user context set with firebase and backend data - context\n\n  const [signup, setSignup] = useState();\n\n  useEffect(() => {\n    async function getUser() {\n      if (authUser) {\n        const userPath = `/users/?email=${authUser.email}`;\n\n        const data = await fetchData(userPath);\n\n        const payload = data.payload[0];\n\n        // if data is null - set some not sign up to true\n        // if not sign up is true redirect to sign up form\n        payload ? setUserData(payload) : setSignup(true);\n      }\n    }\n    // checks if user context data has already been fetched from backend\n    !user && getUser();\n  }, [authUser, user]);\n\n  useEffect(() => {\n    async function getUserJourney() {\n      if (userData) {\n        const journeyPath = `/journeys/?id=${userData.id}`;\n        const data = await fetchData(journeyPath);\n        setJourney(data.payload);\n      }\n    }\n    // checks if user context data has already been fetched from backend\n    !user && getUserJourney();\n  }, [userData]);\n\n  useEffect(() => {\n    if (authUser && userData) {\n      const newUser = createUserObj(authUser, userData, userJourney);\n      setUser(newUser);\n    }\n  }, [authUser, userData, userJourney]);\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  if (signup) {\n    return <Signup signup={signup} setSignup={setSignup} />;\n  }\n\n  return authUser ? (\n    <Route path={path} render={() => <Component />} exact={exact}></Route>\n  ) : (\n    <Redirect to={\"/login\"}></Redirect>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Contact/contact.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Logo/logo.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Loading/loading.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Profile/profile.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Homepage/homepage.js",["268","269","270","271"],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/NavBar/nav.js",["272","273","274","275"],"import React, { useState } from \"react\";\n\n//images\nimport socLogo from \"../../Images/SoCietly_logo (2).svg\";\n\n//components\nimport { logout } from \"../../Components/Firebase/auth\";\n\n//Context\nimport { useUserContext } from \"../../Context/userContext\";\n\n//styling\nimport style from \"./nav.module.css\";\nimport \"./burgerStyle.css\";\nimport \"./hamburger/dist/hamburgers.css\";\n\n//router\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  NavLink,\n} from \"react-router-dom\";\n\nimport SiteLogo from \"../Logo/logo\";\n\nexport default function NavBar() {\n  const [user, setUser] = useUserContext();\n  const [hide, setHide] = useState(\"hide\");\n  const [burger, setBurger] = useState(\"\");\n  const [hideCog, setHideCog] = useState(\"hide\");\n\n  function signOut() {\n    logout();\n    setUser(null);\n  }\n\n  function changeBurger() {\n    burger === \"\" ? setBurger(\"is-active\") : setBurger(\"\");\n    hide === \"hide\" ? setHide(\"\") : setHide(\"hide\");\n\n    hideCog === \"hide\" ? setHideCog(\"hide\") : setHideCog(\"hide\");\n  }\n\n  function changeHide() {\n    hideCog === \"hide\" ? setHideCog(\"\") : setHideCog(\"hide\");\n\n    burger === \"is-active\" ? setBurger(\"\") : setBurger(\"\");\n    hide === \"hide\" ? setHide(\"hide\") : setHide(\"hide\");\n  }\n\n  return user ? (\n    <div className={style.navDiv}>\n      <nav className={style.nav}>\n        <div className=\"container\">\n          {/* Search Bar */}\n          <div className={style.navContainer}>\n            <ul>\n              <li>\n                <NavLink\n                  to=\"/\"\n                  style={{ textDecoration: \"none\" }}\n                  activeStyle={{ textDecoration: \"none\", color: \"black\" }}\n                >\n                  <div className={style.logoDiv}>\n                    <img\n                      className={style.img}\n                      src={socLogo}\n                      alt=\"School of Code Logo\"\n                      height=\"100\"\n                      width=\"100\"\n                      onClick={changeHide}\n                    />\n                  </div>\n                </NavLink>\n              </li>\n\n              {\n                <div className=\"menuContainer\">\n                  {user && (\n                    <Link to=\"/\">\n                      <li>\n                        <span onClick={signOut}>Logout</span>\n                      </li>\n                    </Link>\n                  )}\n                  <button\n                    class={`hamburger hamburger--spring ${burger} cog`}\n                    type=\"button\"\n                    onClick={changeBurger}\n                    style={{ outline: \"none\" }}\n                  >\n                    <span class=\"hamburger-box \">\n                      <span class=\"hamburger-inner\"></span>\n                    </span>\n                  </button>\n\n                  {/* <li onClick={changeHide}>\n                  <img\n                    src=\"https://www.flaticon.com/svg/static/icons/svg/3601/3601082.svg\"\n                    className={style.cog}\n                  />\n                </li> */}\n                </div>\n              }\n            </ul>\n          </div>\n        </div>\n      </nav>\n      <div className={`burgerContent ${hide}`}>\n        <div className=\"topBurger\">\n          <Link to=\"/\">\n            <p onClick={changeHide}>Home</p>\n          </Link>\n        </div>\n        <Link to=\"/events\">\n          <p onClick={changeHide}>Events</p>\n        </Link>\n        {user && (\n          <Link to={`/bootcamper/${user.uid ? user.uid : user.id}`}>\n            <p onClick={changeHide}>Profile</p>\n          </Link>\n        )}\n        <Link to=\"/alumni\">\n          <p onClick={changeHide}>Alumni</p>\n        </Link>\n        <Link to=\"/resources\">\n          <p onClick={changeHide}>Resources</p>\n        </Link>\n        <Link to=\"/contact\">\n          <p onClick={changeHide}>Contact</p>\n        </Link>\n      </div>\n      <div className={`burgerContent ${hideCog}`}></div>\n    </div>\n  ) : null;\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/Alumni/Alumni.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/SignInUser/signin.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/ModalOverlay/modalOverlay.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Maps/maps.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/userLeftSide/userLeftSide.js",["276","277"],"import style from \"./userLeftSide.module.css\";\n\n// Components\nimport UserInfo from \"../../Components/UserInfo/userinfo.js\";\n\n//Context\nimport { useUserContext } from \"../../Context/userContext\";\n\n//Config\nimport { url } from \"../../config\";\n\n// export default function UserLeftSide() {\n//   const [user, setUser] = useUserContext();\n//   return (\n//     <section className={style.userSec}>\n//       <div className={style.column2}>\n//         <UserImage user={user} />\n//         <UserInfo user={user} homepageEdit />\n//       </div>\n//     </section>\n//   );\n// }\n\nimport React, { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\n\nimport Card from \"../../MaterialUi/Card/card.js\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst drawerWidth = 300;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    // marginTop: \"5rem\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    // position: \"absolute\",\n    // top: \"50%\",\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    boxShadow: \"0 2px 5px rgb(0 0 0 / 9%)\",\n    borderRadius: \"5px\",\n    marginTop: \"5rem\",\n    zIndex: \"500\",\n    paddingBottom: \"500px\",\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n}));\n\nexport default function UserLeftSide() {\n  const [user, setUser] = useUserContext();\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n\n  const [allEvents, setAllEvents] = useState([]);\n\n  async function get() {\n    let res = await fetch(`${url}/events`);\n    let data = await res.json();\n\n    setAllEvents(data.payload);\n  }\n\n  useEffect(() => {\n    get();\n  }, []);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      {/* <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      > */}\n      <div className={style.posContainer}>\n        <div className={style.pos}>\n          <Toolbar className={style.none}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <div className={style.arrowContainer}>\n                <ArrowForwardIosIcon className={style.red} />\n              </div>\n            </IconButton>\n          </Toolbar>\n        </div>\n      </div>\n      {/* </AppBar> */}\n\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n\n        <List>\n          <section className={style.userSec}>\n            {/* <UserImage user={user} width={\"85px\"} /> */}\n            <UserInfo user={user} homepageEdit link width={\"85px\"} centre />\n\n            <section\n              className={`contentContainer`}\n              style={{ paddingLeft: 0, paddingRight: 0, boxShadow: \"none\" }}\n            >\n              <h3>Events you're attending 📅</h3>\n              <br />\n              <div className={style.scroll}>\n                <div className={style.marginTop}>\n                  <Grid container spacing={3}>\n                    {allEvents.map((item, index) => {\n                      if (item.attendinglist?.includes(user.username)) {\n                        let date = new Date(item.date).toDateString();\n                        return (\n                          <div className=\"maxWidth\">\n                            <Card\n                              key={index}\n                              date={date}\n                              item={item}\n                              userLeftSide\n                            />\n                          </div>\n                        );\n                      }\n                    })}\n                  </Grid>\n                </div>\n              </div>\n            </section>\n          </section>\n        </List>\n\n        <Divider />\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Card/card.js",["278","279"],"// React and Material ui\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport HowToRegIcon from \"@material-ui/icons/HowToReg\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\n\n//Config\nimport { url } from \"../../config\";\n\n// Comp\nimport Maps from \"../../Components/Maps/maps.js\";\nimport CreateEvent from \"../../Pages/CreateEvent/createEvent.js\";\nimport UserImage from \"../../Components/userImage/userImage.js\";\nimport Comments from \"../../Components/Comments/comments.js\";\n\n// Cloudinary\nimport { Image } from \"cloudinary-react\";\n\n// Styling\nimport \"./card.css\";\nimport cn from \"classnames\";\n\n// User context\nimport { useUserContext } from \"../../Context/userContext\";\n\n// React Router Dom\nimport { Link } from \"react-router-dom\";\n\n// React confrim-alert box\nimport { confirmAlert } from \"react-confirm-alert\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\",\n    backgroundColor: \"white\",\n  },\n  media: {\n    height: 0,\n    paddingTop: \"30%\", // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\",\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function EventCard({\n  key,\n  date,\n  item,\n  myEvents,\n  fetchUserEvents,\n  userLeftSide,\n}) {\n  /*--------Props--------*/\n  const {\n    attendinglist,\n    description,\n    enablevolunteers,\n    eventname,\n    eventtype,\n    image,\n    likes,\n    location,\n    time,\n    uid,\n    volunteerlist,\n    eventid,\n    eventlink,\n\n    name,\n    surname,\n    profileimage,\n    id,\n    cohort,\n  } = item;\n\n  const eventUser = {\n    profileimage: profileimage,\n    name: name,\n    cohort: cohort,\n    id: id,\n  };\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  /*--------User context--------*/\n  const [user] = useUserContext();\n\n  /*--------Maps marker state--------*/\n  const [marker, setMarker] = useState(JSON.parse(location));\n\n  //To show and hide createEvents\n  const [hide, setHide] = useState(\"hide\");\n  const [hideCard, setHideCard] = useState(\"\");\n\n  // Comments\n  const [hideComment, setHideComment] = useState(\"hide\");\n  const [commentColour, setCommentColour] = useState(\"\");\n\n  const [attentingGet, setAttedingGet] = useState([]);\n  const [attendingYellow, setAttendingYellow] = useState(\"\");\n\n  // const [like, setLike] = useState(0);\n  const [redLike, setRedLike] = useState(\"\");\n  const [likeGet, setLikeGet] = useState([]);\n  const [propLike, setPropLike] = useState([]);\n\n  function getAttenting() {\n    setAttedingGet(attendinglist);\n    setPropLike(likes);\n    setLikeGet(propLike);\n  }\n  useEffect(() => {\n    getAttenting();\n  }, []);\n\n  /*---------------Add to Attend Patch----------------*/\n  let addToAttend = (eventid, arr) => {\n    fetch(`${url}/events/${eventid}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ attendingList: arr }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.log(error));\n  };\n\n  function addToAttending() {\n    for (let i = 0; i <= attendinglist.length; i++) {\n      if (attendinglist[i] === `${user.username}`) {\n        return alert(\"You've already declared you're attending :)\");\n      }\n    }\n    let attending = [...attendinglist, `${user.username}`];\n\n    setAttedingGet(attending);\n    setAttendingYellow(\"yellow\");\n    addToAttend(eventid, attending);\n    // setUserEvents(null);\n  }\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  // Send email function\n  async function deleteEmail() {\n    await fetch(`${url}/mail`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        to: [\"za.qa@outlook.com\", \"qarout.zaid@gmail.com\"],\n        subject: `SoC: Event canceled, ${eventname}`,\n        text: `The event created by ${user.username} has been deleted. Apologies of any inconvinienced this may have caused. You can view visit SoCietly here: https://societly.netlify.app`,\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) =>\n        console.log(\"this is the delete event email data: \", data)\n      )\n      .catch((error) => console.log(\"delete event email error: \", error));\n  }\n\n  // Delete Event\n  async function deleteEvent(eventId) {\n    //linting rule which is why confirm doesn't work.\n    //I can still window.confirm\n    confirmAlert({\n      title: \"Are you sure you want to delete this event?\",\n      message: \"This action is irreversible\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            setHideCard(\"hide\");\n\n            fetch(`${url}/events/${eventid}`, {\n              method: \"delete\",\n            })\n              .then((res) => res.json())\n              .then((data) => console.log(data))\n              .then(() => deleteEmail())\n              .catch((error) => console.log(error));\n          },\n        },\n        {\n          label: \"No\",\n          onClick: () => {\n            return;\n          },\n        },\n      ],\n    });\n  }\n\n  /*---------------Add to Like Patch----------------*/\n  let addToLike = (eventid, arr) => {\n    fetch(`${url}/events/${eventid}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ likes: arr }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.log(error));\n  };\n\n  // Add likes\n  /*\n  - If person's is not in the array, then add is\n  - If person's name is in the array then remove it\n  */\n  function addLikes() {\n    if (propLike?.includes(user.username)) {\n      let index = propLike.indexOf(user.username);\n      let removeLike = [\n        ...propLike.slice(0, index),\n        ...propLike.slice(index + 1),\n      ];\n      setLikeGet(removeLike);\n      setPropLike(removeLike);\n      setRedLike(\"\");\n\n      addToLike(eventid, removeLike);\n    } else {\n      let likesArr = [...propLike, `${user.username}`];\n\n      setLikeGet(likesArr);\n      setPropLike(likesArr);\n      setRedLike(\"red\");\n      addToLike(eventid, likesArr);\n    }\n  }\n\n  // Setting icon colours\n  function setIconColour() {\n    if (attendinglist?.includes(user.username)) {\n      setAttendingYellow(\"yellow\");\n    }\n    if (likes?.includes(user.username)) {\n      setRedLike(\"red\");\n    }\n    return;\n  }\n\n  useEffect(() => {\n    setIconColour();\n  }, [attentingGet, likeGet]);\n\n  function showComment() {\n    if (hideComment === \"hide\") {\n      setHideComment(\"\");\n      setCommentColour(\"commentColour\");\n    } else {\n      setHideComment(\"hide\");\n      setCommentColour(\"\");\n    }\n  }\n\n  // <CardHeader\n  //         avatar={\n  //           <Avatar aria-label=\"recipe\">\n  //             <UserImage user={eventUser} width={\"100%\"} />\n  //           </Avatar>\n  //         }\n  //         title={\n  //           <Link to={`/bootcamper/${id}`} className=\"cardName\">\n  //             {name} {surname}\n  //           </Link>\n  //         }\n  //       />\n\n  if (!userLeftSide) {\n    return (\n      <Card className={cn(classes.root, hideCard)}>\n        <CardHeader\n          avatar={\n            <div className=\"imgAvatar\">\n              <UserImage user={eventUser} width={\"100%\"} />\n            </div>\n          }\n          title={\n            <Link to={`/bootcamper/${id}`} className=\"cardName\">\n              {name} {surname}\n            </Link>\n          }\n        />\n        <div className=\"cardContainer2 cardTitle\">\n          <Link to={`/event/${eventid}`}>{eventname}</Link>\n          <br />\n          <p>{date}</p>\n        </div>\n\n        <div className=\"cardContainer\">\n          <Image\n            key={key}\n            cloudName=\"falcons\"\n            publicId={image}\n            width=\"1500\"\n            crop=\"scale\"\n            className=\"img\"\n          />\n        </div>\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            People attending this event:\n            <br />\n            {attendinglist?.includes(user?.username)\n              ? `${attentingGet?.join(\", \")}`\n              : attentingGet?.join(\", \")}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\" onClick={addLikes}>\n            <FavoriteIcon className={redLike} />\n            {propLike?.length}\n          </IconButton>\n          <IconButton>\n            <HowToRegIcon\n              onClick={addToAttending}\n              className={attendingYellow}\n            />\n            {/* {attendinglist?.length} */}\n            {attentingGet?.length}\n          </IconButton>\n          {myEvents && (\n            <IconButton\n              onClick={() =>\n                hide === \"hide\" ? setHide(\"show\") : setHide(\"hide\")\n              }\n            >\n              <EditIcon />\n            </IconButton>\n          )}\n\n          {myEvents && (\n            <IconButton\n              onClick={() => {\n                deleteEvent(eventid);\n              }}\n            >\n              <DeleteForeverIcon />\n            </IconButton>\n          )}\n\n          <IconButton onClick={() => showComment()}>\n            <CommentIcon className={commentColour} />\n          </IconButton>\n\n          <IconButton\n            className={clsx(classes.expand, {\n              [classes.expandOpen]: expanded,\n            })}\n            onClick={handleExpandClick}\n            aria-expanded={expanded}\n            aria-label=\"show more\"\n          >\n            <ExpandMoreIcon />\n          </IconButton>\n        </CardActions>\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography paragraph>{description}</Typography>\n            {eventlink && (\n              <div>\n                <h3>Event Link:</h3>\n                <a href={eventlink}>\n                  <Typography paragraph>{eventlink}</Typography>\n                </a>\n              </div>\n            )}\n            {!eventlink && <Maps marker={marker} setMarker={setMarker} />}\n          </CardContent>\n        </Collapse>\n\n        <section className={`${hideComment} commentContainer`}>\n          <Comments eventid={eventid} />\n        </section>\n\n        <section className={hide}>\n          <CreateEvent\n            attendinglist={attendinglist}\n            date={date}\n            description={description}\n            enablevolunteers={enablevolunteers}\n            eventname={eventname}\n            eventtype={eventtype}\n            id={id}\n            image={image}\n            likes={likes}\n            location={location}\n            time={time}\n            uid={uid}\n            volunteerlist={volunteerlist}\n            eventsEdit\n            eventId={eventid}\n            userId={user?.uid}\n            hide={hide}\n            setHide={setHide}\n            fetchUserEvents={fetchUserEvents}\n            editEvent\n          />\n        </section>\n      </Card>\n    );\n  } else if (userLeftSide) {\n    return (\n      <div className=\"attendingContainer\">\n        <Card className={cn(classes.root, hideCard)}>\n          <div className=\"cardContainer attendingStyle\">\n            <Link to={`/event/${eventid}`} style={{ fontSize: \"0.9rem\" }}>\n              {eventname}\n            </Link>\n            {/* <br /> */}\n            <p style={{ margin: 0 }}>{date}</p>\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/config.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Pages/SignInUser/background.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Helpers/createUserObj.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Intro/intro.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Firebase/auth.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CohortContainer/cohortContainer.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Helpers/fetch.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserProfile/userProfile.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/jobUpdates/jobUpdates.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/BootcamperProfile/Bootcamper.js",["280","281","282"],"//Config\nimport { url } from \"../../config\";\n\n//React\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n//Components\nimport UserInfo from \"../UserInfo/userinfo\";\nimport UserSkills from \"../UserSkills/userskills\";\nimport UserIntro from \"../UserIntro/userintro\";\nimport UserJourney from \"../UserJourney/journey\";\nimport Loading from \"../Loading/loading\";\n\n//Style\nimport style from \"../UserProfile/profile.module.css\";\nimport cn from \"classnames\";\n\nexport default function BootcamperProfilePage() {\n  const [journey, setJourney] = useState();\n  const [userData, setUserData] = useState();\n  const [bootcamper, setBootcamper] = useState();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    async function getUser() {\n      if (id) {\n        let res = await fetch(`${url}/users/?id=${id}`);\n        let data = await res.json();\n        const user = data.payload[0];\n\n        setUserData(user);\n      }\n    }\n    getUser();\n  }, [id]);\n\n  useEffect(() => {\n    async function getUserJourney() {\n      if (userData) {\n        let res = await fetch(`${url}/journeys/?id=${id}`);\n        let data = await res.json();\n        setJourney(data.payload);\n      }\n    }\n    getUserJourney();\n  }, [userData]);\n\n  useEffect(() => {\n    if (userData) {\n      const newUser = {\n        uid: userData.id,\n        username: `${userData.name} ${userData.surname}`,\n        email: userData.email,\n        profileImage: userData.profileimage,\n        admin: userData.admin,\n        cohort: userData.cohort,\n        currentRole: userData.currentrole,\n        currentEmployer: userData.currentemployer,\n        skills: userData.skills,\n        social: userData.social,\n        introduction: userData.introduction,\n        journey: journey ? journey : null,\n      };\n      setBootcamper(newUser);\n    }\n  }, [userData && journey]);\n\n  return (\n    <div className=\"marginTop\">\n      {bootcamper ? (\n        <div className={cn(style.row)}>\n          {/* ---Column Left--- */}\n          <div className={cn(style.column, style.leftProfile)}>\n            <UserInfo user={bootcamper} />\n            <UserSkills user={bootcamper} />\n          </div>\n          {/* ---Column Right--- */}\n          <div className={cn(style.column, style.right)}>\n            <UserIntro user={bootcamper} />\n            <UserJourney user={bootcamper} />\n          </div>\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Signup/signup.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Comments/comments.js",["283","284"],"import React, { useState, useEffect } from \"react\";\n\n// Config\nimport { url } from \"../../config.js\";\n\n// User context\nimport { useUserContext } from \"../../Context/userContext\";\n\n// Components\nimport Comment from \"../Comment/comment.js\";\n\n// Styling\nimport style from \"./comments.module.css\";\n\nexport default function Comments({ eventid }) {\n  /*--------User context--------*/\n  const [user] = useUserContext();\n\n  const [allComments, setAllComments] = useState(\"\");\n  const [inputValue, setInputValue] = useState(\"\");\n  const [comment, setComment] = useState([]);\n\n  const [newCommentId, setNewCommentId] = useState(null);\n\n  // Fetching all comments\n  async function getAllComments() {\n    const res = await fetch(`${url}/comments`);\n    const data = await res.json();\n    setAllComments(data.payload);\n  }\n\n  useEffect(() => {\n    getAllComments();\n  }, []);\n\n  // Formating dateTime\n  const dateTime = new Date();\n  let commentDateTime = new Date(dateTime);\n  let displayDate = commentDateTime.toLocaleDateString();\n  let displayTime = commentDateTime.toLocaleTimeString();\n\n  // Post Comment\n  // PATCH/POST Event\n  let createComment = async (msg) => {\n    await fetch(`${url}/comments`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        commentUserId: user.id,\n        name: user.name,\n        surname: user.surname,\n        timeDate: dateTime,\n        commentEventId: eventid,\n        profileImage: user.profileImage,\n        cohort: user.cohort,\n        comment: msg,\n        likes: [],\n      }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((date) => setNewCommentId(date?.commentid))\n      .catch((error) => console.log(\"comment creation error: \", error));\n  };\n\n  // Add comment function\n  function addComment() {\n    if (inputValue === \"\") {\n      return;\n    }\n    const newComment = [\n      ...comment,\n      {\n        commentuserid: user.id,\n        name: user.name,\n        surname: user.surname,\n        timedate: dateTime,\n        profileimage: user.profileImage,\n        cohort: user.cohort,\n        comment: inputValue,\n        likes: [],\n      },\n    ];\n    setComment(newComment);\n    createComment(inputValue);\n    setInputValue(\"\");\n  }\n\n  return (\n    <div>\n      {allComments &&\n        allComments.map((comment, index) => {\n          return comment.commenteventid === eventid ? (\n            <Comment\n              key={index}\n              comments={comment}\n              newCommentId={newCommentId}\n            />\n          ) : null;\n        })}\n\n      {comment.map((comment, index) => {\n        return (\n          <Comment key={index} comments={comment} newCommentId={newCommentId} />\n        );\n      })}\n\n      <div>\n        <input\n          type=\"text\"\n          className={style.commentInput}\n          onChange={(e) => setInputValue(e.target.value)}\n          value={inputValue}\n        />\n        <div className={style.buttonAligner}>\n          <button onClick={addComment} className=\"button\">\n            Reply\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/userImage/userImage.js",["285","286"],"//styling\n// import style from \"./userImage.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./userImage.css\";\n\n//Link\nimport { Link } from \"react-router-dom\";\n\n// Styling\nimport style from \"./userImage.module.css\";\nimport cn from \"classnames\";\n\nexport default function UserImage({ user, width = \"60px\", centre, alumni }) {\n  const { profileimage, profileImage, name, cohort, id, uid } = user;\n  const [styling, setStyling] = useState(null);\n  const [cohortNumber, setCohortNumber] = useState(null);\n\n  function styleCohort() {\n    if (cohort === 1) {\n      setStyling(\"cohort1\");\n      setCohortNumber(1);\n    } else if (cohort === 2) {\n      setStyling(\"cohort2\");\n      setCohortNumber(2);\n    } else if (cohort === 3) {\n      setStyling(\"cohort3\");\n      setCohortNumber(3);\n    } else if (cohort === 4) {\n      setStyling(\"cohort4\");\n      setCohortNumber(4);\n    } else if (cohort === 5) {\n      setStyling(\"cohort5\");\n      setCohortNumber(5);\n    }\n  }\n\n  useEffect(() => {\n    styleCohort();\n  }, []);\n\n  let smallWidth = parseInt(width) / 4.5;\n  // style={{\n  //   width: `${smallWidth}px`,\n  //   height: `${smallWidth}px`,\n  //   fontSize: `${smallWidth}px`,\n  // }}\n\n  return (\n    <div\n      style={{ width: `${width}` }}\n      className={cn(style.image, centre && style.imageMargin)}\n    >\n      <Link to={`/bootcamper/${id ? id : uid}`}>\n        <img\n          class={styling}\n          src={profileImage ? profileImage : profileimage}\n          alt={`${name} profile`}\n          width={width}\n          className={`profImg ${styling}`}\n        />\n      </Link>\n      {!alumni && (\n        <div className={cn(style.cohort, styling)}>{cohortNumber}</div>\n      )}\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserInfo/userinfo.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/SocialMedia/logo.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Photos/photos.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserEventsContainer/userEventsContainer.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserSkills/userskills.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/EditProfile/editProfile.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CreateJourney/addNewJourney.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserJourney/journey.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserIntro/userintro.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/Comment/comment.js",["287","288"],"import React, { useState, useEffect } from \"react\";\n\n// React Router Dom\nimport { Link } from \"react-router-dom\";\n\n// Config\nimport { url } from \"../../config.js\";\n\n// User context\nimport { useUserContext } from \"../../Context/userContext\";\n\n// Components\nimport UserImage from \"../userImage/userImage.js\";\n\n// Styling\nimport style from \"./comment.module.css\";\n\n// Material ui\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\n\nexport default function Comment({ id, comments, newCommentId }) {\n  const {\n    commentid,\n    commentuserid,\n    name,\n    surname,\n    timedate,\n    profileimage,\n    comment,\n    cohort,\n    likes,\n  } = comments;\n\n  // Formating dateTime\n  const commentDateTime = new Date(timedate);\n  const displayDate = commentDateTime.toLocaleDateString();\n  const displayTime = commentDateTime.toLocaleTimeString();\n\n  let userImageUser = {\n    profileimage: profileimage,\n    profileImage: profileimage,\n    name: `${name} ${surname}`,\n    cohort: cohort,\n    id: commentuserid,\n    uid: commentuserid,\n  };\n  /*--------User context--------*/\n  const [user] = useUserContext();\n\n  let commendIdForPatch = newCommentId ? newCommentId : commentid;\n\n  // Likes\n  const [redLike, setRedLike] = useState(\"\");\n  const [likeGet, setLikeGet] = useState([]);\n  const [propLike, setPropLike] = useState([]);\n\n  useEffect(() => {\n    setPropLike(likes);\n    setLikeGet(propLike);\n    if (likes?.includes(user.username)) {\n      setRedLike(\"red\");\n    }\n  }, []);\n\n  function addLikes() {\n    if (propLike?.includes(user.username)) {\n      let index = propLike.indexOf(user.username);\n      let removeLike = [\n        ...propLike.slice(0, index),\n        ...propLike.slice(index + 1),\n      ];\n      setLikeGet(removeLike);\n      setPropLike(removeLike);\n      setRedLike(\"\");\n\n      addToLike(removeLike);\n    } else {\n      let likesArr = [...propLike, `${user.username}`];\n\n      setLikeGet(likesArr);\n      setPropLike(likesArr);\n      setRedLike(\"red\");\n      addToLike(likesArr);\n    }\n  }\n\n  /*---------------Add to Like Patch----------------*/\n  let addToLike = (arr) => {\n    fetch(`${url}/comments/${commendIdForPatch}`, {\n      method: \"PATCH\",\n      body: JSON.stringify({ likes: arr }),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(data))\n      .catch((error) => console.log(error));\n  };\n\n  if (user) {\n    return (\n      <div className={style.contentContainer}>\n        <div className={style.commentContent}>\n          <div className={style.row}>\n            <div className={style.column1}>\n              <UserImage user={userImageUser} width=\"45px\" />\n            </div>\n            <div className={style.column2}>\n              <Link to={`/bootcamper/${commentuserid}`}>\n                <p>\n                  {name} {surname}\n                </p>\n              </Link>\n              <p\n                className={style.timeDate}\n              >{`${displayDate} - ${displayTime}`}</p>\n            </div>\n          </div>\n          <p className={style.comment}>{comment}</p>\n          <IconButton\n            aria-label=\"add to favorites\"\n            onClick={addLikes}\n            className={style.likes}\n          >\n            <FavoriteIcon className={redLike} />\n            {propLike?.length}\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserSocial/social.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/EditUserJourney/editUserJourney.js",["289"],"//React\nimport { useForm, Controller } from \"react-hook-form\";\n\n//Config\nimport { url } from \"../../config\";\n\n//Style\nimport style from \"./editUserJourney.module.css\";\n\n//Context\nimport { useUserContext } from \"../../Context/userContext\";\n\n// Material UI\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nimport ModalOverlay from \"../ModalOverlay/modalOverlay\";\n\nexport default function EditJourney({\n  journeyItem,\n  startDate,\n  endDate,\n  setEditJourney,\n  visible,\n  setJourneyIndex,\n}) {\n  // Context\n  const [user, setUser] = useUserContext();\n\n  const { jobtitle, employer, description, id } = journeyItem;\n\n  // React Form\n  const { handleSubmit, control } = useForm();\n\n  function submitJourney(msg) {\n    const { employer, jobTitle, startDate, endDate, description } = msg;\n\n    const newJourney = {\n      //   uid: user.id ? user.id : user.uid,\n      employer: employer,\n      jobTitle: jobTitle,\n      startDate: startDate,\n      endDate: endDate ? endDate : null,\n      description: description,\n    };\n\n    fetch(`${url}/journeys/${id}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(newJourney),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(\"this is the user data: \", data))\n      .then(() => {\n        setUser(null);\n        setEditJourney(false);\n        setJourneyIndex(null);\n      })\n      .catch((error) => console.log(\"user creation error error: \", error));\n  }\n\n  return (\n    <div>\n      <ModalOverlay\n        visible={visible}\n        onClose={() => setEditJourney(false)}\n        onSave={handleSubmit(submitJourney)}\n        header={\"Edit Journey Entry\"}\n      >\n        <form className={style.formContainer}>\n          <FormControl variant=\"outlined\">\n            <Controller\n              name=\"employer\"\n              as={\n                <TextField\n                  id=\"employer\"\n                  variant=\"outlined\"\n                  label=\"Employer\"\n                  style={{ margin: 8 }}\n                />\n              }\n              control={control}\n              defaultValue={employer}\n            />\n          </FormControl>\n          <FormControl variant=\"outlined\">\n            <Controller\n              name=\"jobTitle\"\n              as={\n                <TextField\n                  id=\"jobTitle\"\n                  variant=\"outlined\"\n                  label=\"Job Title\"\n                  style={{ margin: 8 }}\n                />\n              }\n              control={control}\n              defaultValue={jobtitle}\n            />\n          </FormControl>\n          <FormControl variant=\"outlined\" style={{ margin: 8 }}>\n            <label className={style.formLabel} for=\"startDate\">\n              Start Date\n            </label>\n            <Controller\n              name=\"startDate\"\n              as={<input className={style.dateInput} type=\"date\" />}\n              control={control}\n              defaultValue={startDate}\n            />\n          </FormControl>\n          <FormControl variant=\"outlined\" style={{ margin: 8 }}>\n            <label className={style.formLabel} for=\"endDate\">\n              End Date (if applicable)\n            </label>\n            <Controller\n              name=\"endDate\"\n              as={<input className={style.dateInput} type=\"date\" />}\n              control={control}\n              defaultValue={endDate}\n            />\n          </FormControl>\n          <FormControl variant=\"outlined\">\n            <Controller\n              name=\"description\"\n              as={\n                <TextField\n                  id=\"description\"\n                  variant=\"outlined\"\n                  label=\"Description\"\n                  style={{ margin: 8 }}\n                  multiline\n                  rows={8}\n                />\n              }\n              control={control}\n              defaultValue={description}\n            />\n          </FormControl>\n        </form>\n      </ModalOverlay>\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Timeline/timeline.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/UserSocial/socialLogo.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/MaterialUi/Buttons/iconButton.js",[],"/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Components/CreateJourney/createJourney.js",["290","291"],"//React\nimport React, { useState, useEffect } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\n\n//Context\nimport { useAuthContext } from \"../../Context/authContext\";\nimport { useUserContext } from \"../../Context/userContext\";\n\n//Components\nimport Loading from \"../../Components/Loading/loading\";\nimport UserJourney from \"../UserJourney/journey\";\n\n// Mat ui\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Styling\nimport \"./createJourney.css\";\n\nexport default function CreateJourney({ signup, setSignup }) {\n  // Context\n  const [authUser] = useAuthContext();\n  const [user, setUser] = useUserContext();\n\n  // State\n  const [waiting, setWaiting] = useState(true);\n  // const [pendingJourney, setPendingJourney] = useState(false);\n  const [addJourney, setAddJourney] = useState(false);\n\n  // Styling\n  const useStyles = makeStyles((theme) => ({\n    formControl: {\n      margin: theme.spacing(1),\n      width: \"100%\",\n      height: \"1erm\",\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n\n  // React Form\n  const { register, handleSubmit, control, reset } = useForm();\n\n  useEffect(() => {\n    async function getUser() {\n      if (authUser) {\n        const res = await fetch(\n          `https://falcon5ives.herokuapp.com/users/?email=${authUser.email}`\n        );\n\n        const data = await res.json();\n\n        const payload = data.payload[0];\n\n        !user && setUser(payload);\n      }\n    }\n    getUser();\n  }, [authUser, waiting]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setWaiting(false);\n    }, 3000);\n  }, []);\n\n  function createJourney(msg) {\n    const { employer, jobTitle, startDate, endDate, description } = msg;\n\n    const newJourney = {\n      uid: user.id ? user.id : user.uid,\n      employer: employer,\n      jobTitle: jobTitle,\n      startDate: startDate,\n      endDate: endDate ? endDate : null,\n      description: description,\n    };\n\n    fetch(`https://falcon5ives.herokuapp.com/journeys`, {\n      method: \"POST\",\n      body: JSON.stringify(newJourney),\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((data) => console.log(\"this is the user data: \", data))\n      .then(() => {\n        setUser(null);\n        // setSignup(false);\n        setAddJourney(true);\n        reset();\n      })\n      .catch((error) => console.log(\"user creation error error: \", error));\n  }\n\n  // function handleAddJourney() {\n  //   setPendingJourney(false);\n  //   setAddJourney(true);\n  // }\n\n  if (waiting) {\n    return <Loading />;\n  }\n\n  // if (pendingJourney) {\n  //   return (\n  //     <div className=\"addAnotherContainer\">\n  //       <p>Would you like to add another journey entry?</p>\n  //       <div className=\"journeyButtonAligner\">\n  //         <button\n  //           onClick={() => {\n  //             setUser(null);\n  //             setSignup(false);\n  //             setPendingJourney(false);\n  //           }}\n  //           className=\"button halfWidthJourney noMargin\"\n  //         >\n  //           No\n  //         </button>\n  //         <button\n  //           onClick={handleAddJourney}\n  //           className=\"button-cancel halfWidthJourney yesMargin\"\n  //         >\n  //           Yes\n  //         </button>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  return (\n    <div className=\"singupContainer\">\n      {addJourney ? (\n        <div className=\"journeyTitle\">\n          <div className=\"signupTitleAligner\">\n            <h2>Continue your journey...</h2>\n            <p>Look how far you've come</p>\n          </div>\n        </div>\n      ) : (\n        <div className=\"journeyTitle\">\n          <div className=\"signupTitleAligner\">\n            <h2>Start here...</h2>\n            <p>Tell us about your School of Code journey</p>\n          </div>\n        </div>\n      )}\n      <div className=\"formContent\">\n        <form onSubmit={handleSubmit(createJourney)}>\n          <React.Fragment>\n            <Grid container spacing={3}>\n              {/*----------Employer----------*/}\n              <Grid item xs={12} sm={6}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <Controller\n                    name=\"employer\"\n                    as={<TextField id=\"employer\" label=\"Employer\" required />}\n                    control={control}\n                    rules={{ required: \"Required\" }}\n                    defaultValue={addJourney ? \"\" : \"School of Code\"}\n                  />\n                </FormControl>\n              </Grid>\n\n              {/*----------Job Title----------*/}\n              <Grid item xs={12} sm={6}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <Controller\n                    name=\"jobTitle\"\n                    as={<TextField id=\"jobTitle\" label=\"Job Title\" required />}\n                    control={control}\n                    rules={{ required: \"Required\" }}\n                    defaultValue={addJourney ? \"\" : \"Student Developer\"}\n                  />\n                </FormControl>\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <label className=\"formLabel\" for=\"startDate\">\n                  Start Date\n                </label>\n                <br />\n                <br />\n                <input\n                  type=\"date\"\n                  name=\"startDate\"\n                  ref={register}\n                  required\n                  className=\"maxWidthJourney dateInput\"\n                />\n              </Grid>\n\n              <Grid item xs={12} sm={6}>\n                <label className=\"formLabel\" for=\"endDate\">\n                  End Date (if applicable)\n                </label>\n                <br />\n                <br />\n                <input\n                  type=\"date\"\n                  name=\"endDate\"\n                  ref={register}\n                  className=\"maxWidthJourney dateInput\"\n                />\n              </Grid>\n\n              <Grid item xs={24} sm={12}>\n                <FormControl variant=\"outlined\" fullWidth>\n                  <Controller\n                    name=\"description\"\n                    as={\n                      <TextField\n                        id=\"description\"\n                        variant=\"outlined\"\n                        label=\"Summarise your experience\"\n                        style={{ margin: 0 }}\n                        multiline\n                        rows={8}\n                      />\n                    }\n                    control={control}\n                    rules={{ required: \"Required\" }}\n                    defaultValue=\"\"\n                  />\n                </FormControl>\n              </Grid>\n            </Grid>\n          </React.Fragment>\n\n          <div className=\"signupSubmit\">\n            <div className=\"signupSubmitAligner\">\n              <input\n                type=\"submit\"\n                value=\"Add Journey\"\n                className=\"button buttonMarginLeft\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n      {user?.journey && <UserJourney user={user} />}\n      {addJourney && (\n        <div className=\"signupSubmit\">\n          <div className=\"signupSubmitAligner\">\n            <button\n              onClick={() => {\n                setUser(null);\n                setSignup(false);\n              }}\n              className=\"button continueButtonMargin\"\n            >\n              Continue to Home\n            </button>\n          </div>\n        </div>\n      )}\n      {!addJourney && (\n        <div className=\"signupSubmit\">\n          <div className=\"signupSubmitAligner\">\n            <button\n              className=\"button continueButtonMargin\"\n              style={{ opacity: 0.6, cursor: \"not-allowed\" }}\n            >\n              Continue to Home\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/work/School-of-Code/final-project/front-end-final-project-the-falcon-5ive/src/Context/eventsContext.js",[],{"ruleId":"292","replacedBy":"293"},{"ruleId":"294","replacedBy":"295"},{"ruleId":"296","severity":1,"message":"297","line":82,"column":10,"nodeType":"298","messageId":"299","endLine":82,"endColumn":20},{"ruleId":"300","severity":1,"message":"301","line":89,"column":36,"nodeType":"302","messageId":"303","endLine":89,"endColumn":38},{"ruleId":"296","severity":1,"message":"304","line":31,"column":10,"nodeType":"298","messageId":"299","endLine":31,"endColumn":23},{"ruleId":"305","severity":1,"message":"306","line":81,"column":6,"nodeType":"307","endLine":81,"endColumn":8,"suggestions":"308"},{"ruleId":"300","severity":1,"message":"309","line":190,"column":45,"nodeType":"302","messageId":"310","endLine":190,"endColumn":47},{"ruleId":"300","severity":1,"message":"309","line":216,"column":43,"nodeType":"302","messageId":"310","endLine":216,"endColumn":45},{"ruleId":"300","severity":1,"message":"309","line":240,"column":50,"nodeType":"302","messageId":"310","endLine":240,"endColumn":52},{"ruleId":"300","severity":1,"message":"301","line":22,"column":37,"nodeType":"302","messageId":"303","endLine":22,"endColumn":39},{"ruleId":"296","severity":1,"message":"311","line":13,"column":24,"nodeType":"298","messageId":"299","endLine":13,"endColumn":39},{"ruleId":"305","severity":1,"message":"312","line":37,"column":6,"nodeType":"307","endLine":37,"endColumn":24,"suggestions":"313"},{"ruleId":"305","severity":1,"message":"314","line":65,"column":6,"nodeType":"307","endLine":65,"endColumn":16,"suggestions":"315"},{"ruleId":"305","severity":1,"message":"316","line":72,"column":6,"nodeType":"307","endLine":72,"endColumn":39,"suggestions":"317"},{"ruleId":"296","severity":1,"message":"318","line":27,"column":16,"nodeType":"298","messageId":"299","endLine":27,"endColumn":23},{"ruleId":"296","severity":1,"message":"319","line":30,"column":10,"nodeType":"298","messageId":"299","endLine":30,"endColumn":14},{"ruleId":"305","severity":1,"message":"306","line":42,"column":6,"nodeType":"307","endLine":42,"endColumn":23,"suggestions":"320"},{"ruleId":"300","severity":1,"message":"309","line":162,"column":49,"nodeType":"302","messageId":"310","endLine":162,"endColumn":51},{"ruleId":"296","severity":1,"message":"321","line":19,"column":20,"nodeType":"298","messageId":"299","endLine":19,"endColumn":26},{"ruleId":"296","severity":1,"message":"322","line":20,"column":3,"nodeType":"298","messageId":"299","endLine":20,"endColumn":9},{"ruleId":"296","severity":1,"message":"323","line":21,"column":3,"nodeType":"298","messageId":"299","endLine":21,"endColumn":8},{"ruleId":"296","severity":1,"message":"324","line":26,"column":8,"nodeType":"298","messageId":"299","endLine":26,"endColumn":16},{"ruleId":"296","severity":1,"message":"318","line":108,"column":16,"nodeType":"298","messageId":"299","endLine":108,"endColumn":23},{"ruleId":"300","severity":1,"message":"309","line":195,"column":50,"nodeType":"302","messageId":"310","endLine":195,"endColumn":52},{"ruleId":"305","severity":1,"message":"325","line":139,"column":6,"nodeType":"307","endLine":139,"endColumn":8,"suggestions":"326"},{"ruleId":"305","severity":1,"message":"327","line":273,"column":6,"nodeType":"307","endLine":273,"endColumn":29,"suggestions":"328"},{"ruleId":"305","severity":1,"message":"329","line":48,"column":6,"nodeType":"307","endLine":48,"endColumn":16,"suggestions":"330"},{"ruleId":"305","severity":1,"message":"331","line":68,"column":6,"nodeType":"307","endLine":68,"endColumn":27,"suggestions":"332"},{"ruleId":"305","severity":1,"message":"333","line":68,"column":7,"nodeType":"334","endLine":68,"endColumn":26},{"ruleId":"296","severity":1,"message":"335","line":39,"column":7,"nodeType":"298","messageId":"299","endLine":39,"endColumn":18},{"ruleId":"296","severity":1,"message":"336","line":40,"column":7,"nodeType":"298","messageId":"299","endLine":40,"endColumn":18},{"ruleId":"305","severity":1,"message":"337","line":39,"column":6,"nodeType":"307","endLine":39,"endColumn":8,"suggestions":"338"},{"ruleId":"296","severity":1,"message":"339","line":41,"column":7,"nodeType":"298","messageId":"299","endLine":41,"endColumn":17},{"ruleId":"296","severity":1,"message":"340","line":55,"column":10,"nodeType":"298","messageId":"299","endLine":55,"endColumn":17},{"ruleId":"305","severity":1,"message":"341","line":64,"column":6,"nodeType":"307","endLine":64,"endColumn":8,"suggestions":"342"},{"ruleId":"296","severity":1,"message":"343","line":28,"column":10,"nodeType":"298","messageId":"299","endLine":28,"endColumn":14},{"ruleId":"296","severity":1,"message":"344","line":33,"column":9,"nodeType":"298","messageId":"299","endLine":33,"endColumn":18},{"ruleId":"305","severity":1,"message":"345","line":62,"column":6,"nodeType":"307","endLine":62,"endColumn":25,"suggestions":"346"},"no-native-reassign",["347"],"no-negated-in-lhs",["348"],"no-unused-vars","'userEmails' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'attendingList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'get'. Either include it or remove the dependency array.","ArrayExpression",["349"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'setSelectedFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchUserEvents'. Either include it or remove the dependency array.",["350"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["351"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["352"],"'setUser' is assigned a value but never used.","'date' is assigned a value but never used.",["353"],"'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'SiteLogo' is defined but never used.","React Hook useEffect has a missing dependency: 'getAttenting'. Either include it or remove the dependency array.",["354"],"React Hook useEffect has a missing dependency: 'setIconColour'. Either include it or remove the dependency array.",["355"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["356"],"React Hook useEffect has missing dependencies: 'journey' and 'userData'. Either include them or remove the dependency array.",["357"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","LogicalExpression","'displayDate' is assigned a value but never used.","'displayTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'styleCohort'. Either include it or remove the dependency array.",["358"],"'smallWidth' is assigned a value but never used.","'likeGet' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'likes', 'propLike', and 'user.username'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLikeGet' needs the current value of 'propLike'.",["359"],"'user' is assigned a value but never used.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setUser' and 'user'. Either include them or remove the dependency array.",["360"],"no-global-assign","no-unsafe-negation",{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},{"desc":"365","fix":"366"},{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"377","fix":"378"},{"desc":"379","fix":"380"},{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},"Update the dependencies array to be: [get]",{"range":"385","text":"386"},"Update the dependencies array to be: [fetchUserEvents, user, userEvents]",{"range":"387","text":"388"},"Update the dependencies array to be: [user, userData]",{"range":"389","text":"390"},"Update the dependencies array to be: [authUser, setUser, userData, userJourney]",{"range":"391","text":"392"},"Update the dependencies array to be: [user, allEvents, get]",{"range":"393","text":"394"},"Update the dependencies array to be: [getAttenting]",{"range":"395","text":"396"},"Update the dependencies array to be: [attentingGet, likeGet, setIconColour]",{"range":"397","text":"398"},"Update the dependencies array to be: [id, userData]",{"range":"399","text":"400"},"Update the dependencies array to be: [journey, userData]",{"range":"401","text":"402"},"Update the dependencies array to be: [styleCohort]",{"range":"403","text":"404"},"Update the dependencies array to be: [likes, propLike, user.username]",{"range":"405","text":"406"},"Update the dependencies array to be: [authUser, setUser, user, waiting]",{"range":"407","text":"408"},[2203,2205],"[get]",[952,970],"[fetchUserEvents, user, userEvents]",[1878,1888],"[user, userData]",[2049,2082],"[authUser, setUser, userData, userJourney]",[1148,1165],"[user, allEvents, get]",[3530,3532],"[getAttenting]",[7306,7329],"[attentingGet, likeGet, setIconColour]",[1232,1242],"[id, userData]",[1832,1853],"[journey, userData]",[1030,1032],"[styleCohort]",[1529,1531],"[likes, propLike, user.username]",[1624,1643],"[authUser, setUser, user, waiting]"]